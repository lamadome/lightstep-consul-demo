{
  "version": 4,
  "terraform_version": "1.1.9",
  "serial": 34,
  "lineage": "ab0ffabe-3b34-ed65-172f-80254c409006",
  "outputs": {},
  "resources": [
    {
      "mode": "data",
      "type": "kubectl_path_documents",
      "name": "manifests",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "disable_template": false,
            "documents": [
              "---\napiVersion: v1\nkind: Service\nmetadata:\n  name: frontend\n  labels:\n    app: frontend\nspec:\n  type: LoadBalancer\n  ports:\n    - port: 80\n      targetPort: 80\n  selector:\n    app: frontend",
              "apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: frontend\nautomountServiceAccountToken: true",
              "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: frontend\nspec:\n  protocol: \"http\"",
              "apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: nginx-configmap\ndata:\n  config: |\n    # /etc/nginx/conf.d/default.conf\n    server {\n        listen       80;\n        server_name  localhost;\n\n        #charset koi8-r;\n        #access_log  /var/log/nginx/host.access.log  main;\n\n        location / {\n            root   /usr/share/nginx/html;\n            index  index.html index.htm;\n        }\n\n        # Proxy pass the api location to save CORS\n        # Use location exposed by Consul connect\n        location /api {\n            proxy_pass http://public-api:8080;\n            proxy_http_version 1.1;\n            proxy_set_header Upgrade $http_upgrade;\n            proxy_set_header Connection \"Upgrade\";\n            proxy_set_header Host $host;\n        }\n        location /payments {\n            proxy_pass http://payments:8080;\n            proxy_http_version 1.1;\n            proxy_set_header Upgrade $http_upgrade;\n            proxy_set_header Connection \"Upgrade\";\n            proxy_set_header Host $host;\n        }\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   /usr/share/nginx/html;\n        }\n    }",
              "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: frontend\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      service: frontend\n      app: frontend\n  template:\n    metadata:\n      labels:\n        service: frontend\n        app: frontend\n      annotations:\n        prometheus.io/scrape: \"true\"\n        prometheus.io/port: \"9102\"\n        consul.hashicorp.com/connect-inject: \"true\"\n    spec:\n      serviceAccountName: frontend\n      volumes:\n      - name: config\n        configMap:\n          name: nginx-configmap\n          items:\n          - key: config\n            path: default.conf\n      containers:\n        - name: frontend\n          image: hashicorpdemoapp/frontend:v0.0.7\n          ports:\n            - containerPort: 80\n          env:\n              # consul ingress gateway\n              - name: NEXT_PUBLIC_PUBLIC_API_URL\n                value: http://public-api:8080\n          # volumeMounts:\n          #   - name: config\n          #     mountPath: /etc/nginx/conf.d\n          #     readOnly: true",
              "---\napiVersion: consul.hashicorp.com/v1alpha1\nkind: IngressGateway\nmetadata:\n  name: ingress-gateway\nspec:\n  listeners:\n    - port: 8080\n      protocol: http\n      services:\n        - name: api-vs\n          hosts: [\"*\"]",
              "---\napiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: frontend\nspec:\n  destination:\n    name: frontend\n  sources:\n  - name: ingress-gateway\n    action: allow",
              "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: public-api\nspec:\n  # Name of the destination service affected by this ServiceIntentions entry\n  destination:\n    name: public-api\n  # The set of traffic sources affected by this ServiceIntentions entry\n  sources:\n  - name: ingress-gateway\n    action: allow\n  # The first affected traffic source-maps to service name of inbound traffic source\n  - name: frontend\n    # The set of permissions to apply when frontend is the traffic source\n    # The first permission to match in the list is terminal and stops further evaluation.\n    permissions:\n    # Add this to always deny traffic from the frontend service to /health route\n    - action: deny\n      http:\n        pathExact: \"/health\"\n    # This permission now defines the conditions that should be allowed\n    # Allow traffic to all paths for the GET, PUT, POST, DELETE verbs as long as an\n    # Authorization header is present\n    - action: allow\n      http:\n        pathPrefix: \"/\"\n        methods:\n        - GET\n        - PUT\n        - POST\n        - DELETE\n        header:\n        - name: \"Authorization\"\n          present: true\n    # Define a deny intention for all other traffic\n    - action: deny\n      http:\n        pathPrefix: \"/\"",
              "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: postgres\nspec:\n  destination:\n    name: postgres\n  sources:\n  - name: product-api\n    action: allow",
              "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: payments\nspec:\n  destination:\n    name: payments\n  sources:\n  - name: product-api\n    action: allow\n  - name: public-api\n    action: allow",
              "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: product-api\nspec:\n  destination:\n    name: product-api\n  sources:\n  - name: public-api\n    action: allow",
              "---\napiVersion: v1\nkind: Service\nmetadata:\n  name: payments\nspec:\n  selector:\n    app: payments\n  ports:\n    - name: http\n      protocol: TCP\n      port: 8080\n      targetPort: 8080",
              "apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: payments\nautomountServiceAccountToken: true",
              "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: payments\nspec:\n  protocol: \"http\"",
              "apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: payments-properties-conf-v1\ndata:\n  application.properties: |\n    opentracing.jaeger.http-sender.url=http://otel-collector:9411\n    opentracing.jaeger.include-jaeger-env-tags=true\n    logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG\n    opentracing.jaeger.enable-b3-propagation=true\n    spring.profiles.active=chaos-monkey\n    spring.main.allow-bean-definition-overriding=true\n    chaos.monkey.enabled=false\n    chaos.monkey.watcher.actuatorHealth=true\n    chaos.monkey.assaults.exceptionsActive=true\n    chaos.monkey.assaults.level=1",
              "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: payments\n  labels:\n    app: payments\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: payments\n  template:\n    metadata:\n      labels:\n        app: payments\n      annotations:\n        consul.hashicorp.com/connect-inject: \"true\"\n    spec:\n      serviceAccountName: payments\n      volumes:\n        - name: properties-conf\n          configMap:\n            name: payments-properties-conf-v1\n      containers:\n        - name: payments\n          image: hashicorpdemoapp/payments:v0.0.16\n          volumeMounts:\n            - name: properties-conf\n              mountPath: /config/application.properties\n              subPath: application.properties\n          ports:\n            - containerPort: 8080",
              "---\napiVersion: v1\nkind: Service\nmetadata:\n  name: postgres\n  labels:\n    app: postgres\nspec:\n  type: ClusterIP\n  ports:\n    - port: 5432\n      targetPort: 5432\n  selector:\n    app: postgres",
              "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: postgres\nspec:\n  protocol: 'tcp'",
              "apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: postgres\nautomountServiceAccountToken: true",
              "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: postgres\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      service: postgres\n      app: postgres\n  template:\n    metadata:\n      labels:\n        service: postgres\n        app: postgres\n      annotations:\n        prometheus.io/scrape: \"true\"\n        prometheus.io/port: \"9102\"\n        consul.hashicorp.com/connect-inject: \"true\"\n    spec:\n      serviceAccountName: postgres\n      containers:\n        - name: postgres\n          image: hashicorpdemoapp/product-api-db:v0.0.19\n          ports:\n            - containerPort: 5432\n          env:\n            - name: POSTGRES_DB\n              value: products\n            - name: POSTGRES_USER\n              value: postgres\n            - name: POSTGRES_PASSWORD\n              value: password\n          # only listen on loopback so only access is via connect proxy\n          args: [\"-c\", \"listen_addresses=127.0.0.1\"]\n          volumeMounts:\n            - mountPath: \"/var/lib/postgresql/data\"\n              name: \"pgdata\"\n      volumes:\n        - name: pgdata\n          emptyDir: {}",
              "---\napiVersion: v1\nkind: Service\nmetadata:\n  name: product-api\nspec:\n  selector:\n    app: product-api\n  ports:\n    - name: http\n      protocol: TCP\n      port: 9090\n      targetPort: 9090",
              "apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: product-api\nautomountServiceAccountToken: true",
              "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: product-api\nspec:\n  protocol: \"http\"",
              "apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: db-configmap\ndata:\n  config: |\n    {\n      \"db_connection\": \"host=postgres port=5432 user=postgres password=password dbname=products sslmode=disable\",\n      \"bind_address\": \":9090\",\n      \"metrics_address\": \":9103\"\n    }",
              "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: product-api\n  labels:\n    app: product-api\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: product-api\n  template:\n    metadata:\n      labels:\n        app: product-api\n      annotations:\n        prometheus.io/scrape: \"true\"\n        prometheus.io/port: \"9102\"\n        consul.hashicorp.com/connect-inject: \"true\"\n    spec:\n      serviceAccountName: product-api\n      volumes:\n      - name: config\n        configMap:\n          name: db-configmap\n          items:\n          - key: config\n            path: conf.json\n      containers:\n        - name: product-api\n          image: hashicorpdemoapp/product-api:v0.0.19\n          ports:\n            - containerPort: 9090\n            - containerPort: 9103\n          env:\n            - name: \"CONFIG_FILE\"\n              value: \"/config/conf.json\"\n            - name : JAEGER_ENDPOINT\n              value: http://otel-collector:9411\n          livenessProbe:\n            httpGet:\n              path: /health\n              port: 9090\n            initialDelaySeconds: 15\n            timeoutSeconds: 1\n            periodSeconds: 10\n            failureThreshold: 30\n          volumeMounts:\n            - name: config\n              mountPath: /config\n              readOnly: true",
              "---\napiVersion: v1\nkind: Service\nmetadata:\n  name: public-api\n  labels:\n    app: public-api\nspec:\n  type: ClusterIP\n  ports:\n    - port: 8080\n      targetPort: 8080\n  selector:\n    app: public-api",
              "apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: public-api\nautomountServiceAccountToken: true",
              "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: public-api\nspec:\n  protocol: \"http\"",
              "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: public-api\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      service: public-api\n      app: public-api\n  template:\n    metadata:\n      labels:\n        service: public-api\n        app: public-api\n      annotations:\n        prometheus.io/scrape: \"true\"\n        prometheus.io/port: \"9102\"\n        consul.hashicorp.com/connect-inject: \"true\"\n    spec:\n      serviceAccountName: public-api\n      containers:\n        - name: public-api\n          image: hashicorpdemoapp/public-api:v0.0.5\n          ports:\n            - containerPort: 8080\n          env:\n            - name: BIND_ADDRESS\n              value: \":8080\"\n            - name: PRODUCT_API_URI\n              value: \"http://product-api:9090\"\n            - name: PAYMENT_API_URI\n              value: \"http://payments:9090\"\n            - name : JAEGER_ENDPOINT\n              value: http://otel-collector:9411",
              "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceRouter\nmetadata:\n  name: api-vs\n  namespace: default\nspec:\n  routes:\n    - match:\n        http:\n          pathPrefix: '/api'\n      destination:\n        service: public-api\n        namespace: default\n        #prefixRewrite: \"/\"\n    - match:\n        http:\n          pathPrefix: '/'\n      destination:\n        service: frontend\n        namespace: \"default\"",
              "---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: products-load-generator\n  namespace: default\ndata:\n  load_test.js: |\n    import http from 'k6/http';\n    import { sleep } from 'k6';\n\n    export const options = {\n      vus: 50,\n      duration: '30m',\n    };\n\n    export default function () {\n    sleep(Math.random() * 2);\n      var query = `\n      query {\n        coffees {\n          id\n          name\n          price\n        }\n      }`;\n      var url = 'http://consul-ingress-gateway.consul:8080/api';\n      var payload = JSON.stringify({\n        query: query\n      });\n      var params = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n\n      http.post(url, payload, params);\n    }",
              "apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: payments-load-generator\n  namespace: default\ndata:\n  load_test.js: |\n    import http from 'k6/http';\n    import { sleep } from 'k6';\n\n    export const options = {\n      vus: 25,\n      duration: '30m',\n    };\n\n    export default function () {\n    sleep(Math.random() * 2);\n      var query = `\n      mutation {\n        pay(\n          details: {\n            name: \"John\"\n            type: \"mastercard\"\n            number: \"1111-2222-3333-4444\"\n            expiry: \"01/22\"\n            cv2: 555\n            amount: 8\n          }\n        ){\n          id,\n          card_plaintext,\n          card_ciphertext,\n          message\n        }\n      }`;\n      var url = 'http://consul-ingress-gateway.consul:8080/api';\n      var payload = JSON.stringify({\n        query: query\n      });\n      var params = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n\n      http.post(url, payload, params);\n    }",
              "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: load-generator-deployment\n  labels:\n    app: load-generator-deployment\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: load-generator\n  template:\n    metadata:\n      labels:\n        app: load-generator\n    spec:\n      volumes:\n      - name: products-config-volume\n        configMap:\n          name: products-load-generator\n      - name: payments-config-volume\n        configMap:\n          name: payments-load-generator\n      containers:\n      - name: products-load-generator\n        image: loadimpact/k6\n        command: [\"k6\", \"run\", \"/etc/config/load_test.js\"]\n        volumeMounts:\n        - name: products-config-volume\n          mountPath: /etc/config\n      - name: payments-load-generator\n        image: loadimpact/k6\n        command: [\"k6\", \"run\", \"/etc/config/load_test.js\"]\n        volumeMounts:\n        - name: payments-config-volume\n          mountPath: /etc/config"
            ],
            "id": "e99e7cfaf64c6f177b8bccddaebba3aed2450bf140de200227e98e94fe048540",
            "manifests": {
              "/api/v1/configmaps/db-configmap": "apiVersion: v1\ndata:\n  config: |-\n    {\n      \"db_connection\": \"host=postgres port=5432 user=postgres password=password dbname=products sslmode=disable\",\n      \"bind_address\": \":9090\",\n      \"metrics_address\": \":9103\"\n    }\nkind: ConfigMap\nmetadata:\n  name: db-configmap\n",
              "/api/v1/configmaps/nginx-configmap": "apiVersion: v1\ndata:\n  config: |-\n    # /etc/nginx/conf.d/default.conf\n    server {\n        listen       80;\n        server_name  localhost;\n\n        #charset koi8-r;\n        #access_log  /var/log/nginx/host.access.log  main;\n\n        location / {\n            root   /usr/share/nginx/html;\n            index  index.html index.htm;\n        }\n\n        # Proxy pass the api location to save CORS\n        # Use location exposed by Consul connect\n        location /api {\n            proxy_pass http://public-api:8080;\n            proxy_http_version 1.1;\n            proxy_set_header Upgrade $http_upgrade;\n            proxy_set_header Connection \"Upgrade\";\n            proxy_set_header Host $host;\n        }\n        location /payments {\n            proxy_pass http://payments:8080;\n            proxy_http_version 1.1;\n            proxy_set_header Upgrade $http_upgrade;\n            proxy_set_header Connection \"Upgrade\";\n            proxy_set_header Host $host;\n        }\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   /usr/share/nginx/html;\n        }\n    }\nkind: ConfigMap\nmetadata:\n  name: nginx-configmap\n",
              "/api/v1/configmaps/payments-properties-conf-v1": "apiVersion: v1\ndata:\n  application.properties: |-\n    opentracing.jaeger.http-sender.url=http://otel-collector:9411\n    opentracing.jaeger.include-jaeger-env-tags=true\n    logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG\n    opentracing.jaeger.enable-b3-propagation=true\n    spring.profiles.active=chaos-monkey\n    spring.main.allow-bean-definition-overriding=true\n    chaos.monkey.enabled=false\n    chaos.monkey.watcher.actuatorHealth=true\n    chaos.monkey.assaults.exceptionsActive=true\n    chaos.monkey.assaults.level=1\nkind: ConfigMap\nmetadata:\n  name: payments-properties-conf-v1\n",
              "/api/v1/namespaces/default/configmaps/payments-load-generator": "apiVersion: v1\ndata:\n  load_test.js: |-\n    import http from 'k6/http';\n    import { sleep } from 'k6';\n\n    export const options = {\n      vus: 25,\n      duration: '30m',\n    };\n\n    export default function () {\n    sleep(Math.random() * 2);\n      var query = `\n      mutation {\n        pay(\n          details: {\n            name: \"John\"\n            type: \"mastercard\"\n            number: \"1111-2222-3333-4444\"\n            expiry: \"01/22\"\n            cv2: 555\n            amount: 8\n          }\n        ){\n          id,\n          card_plaintext,\n          card_ciphertext,\n          message\n        }\n      }`;\n      var url = 'http://consul-ingress-gateway.consul:8080/api';\n      var payload = JSON.stringify({\n        query: query\n      });\n      var params = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n\n      http.post(url, payload, params);\n    }\nkind: ConfigMap\nmetadata:\n  name: payments-load-generator\n  namespace: default\n",
              "/api/v1/namespaces/default/configmaps/products-load-generator": "apiVersion: v1\ndata:\n  load_test.js: |-\n    import http from 'k6/http';\n    import { sleep } from 'k6';\n\n    export const options = {\n      vus: 50,\n      duration: '30m',\n    };\n\n    export default function () {\n    sleep(Math.random() * 2);\n      var query = `\n      query {\n        coffees {\n          id\n          name\n          price\n        }\n      }`;\n      var url = 'http://consul-ingress-gateway.consul:8080/api';\n      var payload = JSON.stringify({\n        query: query\n      });\n      var params = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n\n      http.post(url, payload, params);\n    }\nkind: ConfigMap\nmetadata:\n  name: products-load-generator\n  namespace: default\n",
              "/api/v1/serviceaccounts/frontend": "apiVersion: v1\nautomountServiceAccountToken: true\nkind: ServiceAccount\nmetadata:\n  name: frontend\n",
              "/api/v1/serviceaccounts/payments": "apiVersion: v1\nautomountServiceAccountToken: true\nkind: ServiceAccount\nmetadata:\n  name: payments\n",
              "/api/v1/serviceaccounts/postgres": "apiVersion: v1\nautomountServiceAccountToken: true\nkind: ServiceAccount\nmetadata:\n  name: postgres\n",
              "/api/v1/serviceaccounts/product-api": "apiVersion: v1\nautomountServiceAccountToken: true\nkind: ServiceAccount\nmetadata:\n  name: product-api\n",
              "/api/v1/serviceaccounts/public-api": "apiVersion: v1\nautomountServiceAccountToken: true\nkind: ServiceAccount\nmetadata:\n  name: public-api\n",
              "/api/v1/services/frontend": "apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app: frontend\n  name: frontend\nspec:\n  ports:\n  - port: 80\n    targetPort: 80\n  selector:\n    app: frontend\n  type: LoadBalancer\n",
              "/api/v1/services/payments": "apiVersion: v1\nkind: Service\nmetadata:\n  name: payments\nspec:\n  ports:\n  - name: http\n    port: 8080\n    protocol: TCP\n    targetPort: 8080\n  selector:\n    app: payments\n",
              "/api/v1/services/postgres": "apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app: postgres\n  name: postgres\nspec:\n  ports:\n  - port: 5432\n    targetPort: 5432\n  selector:\n    app: postgres\n  type: ClusterIP\n",
              "/api/v1/services/product-api": "apiVersion: v1\nkind: Service\nmetadata:\n  name: product-api\nspec:\n  ports:\n  - name: http\n    port: 9090\n    protocol: TCP\n    targetPort: 9090\n  selector:\n    app: product-api\n",
              "/api/v1/services/public-api": "apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app: public-api\n  name: public-api\nspec:\n  ports:\n  - port: 8080\n    targetPort: 8080\n  selector:\n    app: public-api\n  type: ClusterIP\n",
              "/apis/apps/v1/deployments/frontend": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: frontend\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: frontend\n      service: frontend\n  template:\n    metadata:\n      annotations:\n        consul.hashicorp.com/connect-inject: \"true\"\n        prometheus.io/port: \"9102\"\n        prometheus.io/scrape: \"true\"\n      labels:\n        app: frontend\n        service: frontend\n    spec:\n      containers:\n      - env:\n        - name: NEXT_PUBLIC_PUBLIC_API_URL\n          value: http://public-api:8080\n        image: hashicorpdemoapp/frontend:v0.0.7\n        name: frontend\n        ports:\n        - containerPort: 80\n      serviceAccountName: frontend\n      volumes:\n      - configMap:\n          items:\n          - key: config\n            path: default.conf\n          name: nginx-configmap\n        name: config\n",
              "/apis/apps/v1/deployments/load-generator-deployment": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: load-generator-deployment\n  name: load-generator-deployment\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: load-generator\n  template:\n    metadata:\n      labels:\n        app: load-generator\n    spec:\n      containers:\n      - command:\n        - k6\n        - run\n        - /etc/config/load_test.js\n        image: loadimpact/k6\n        name: products-load-generator\n        volumeMounts:\n        - mountPath: /etc/config\n          name: products-config-volume\n      - command:\n        - k6\n        - run\n        - /etc/config/load_test.js\n        image: loadimpact/k6\n        name: payments-load-generator\n        volumeMounts:\n        - mountPath: /etc/config\n          name: payments-config-volume\n      volumes:\n      - configMap:\n          name: products-load-generator\n        name: products-config-volume\n      - configMap:\n          name: payments-load-generator\n        name: payments-config-volume\n",
              "/apis/apps/v1/deployments/payments": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: payments\n  name: payments\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: payments\n  template:\n    metadata:\n      annotations:\n        consul.hashicorp.com/connect-inject: \"true\"\n      labels:\n        app: payments\n    spec:\n      containers:\n      - image: hashicorpdemoapp/payments:v0.0.16\n        name: payments\n        ports:\n        - containerPort: 8080\n        volumeMounts:\n        - mountPath: /config/application.properties\n          name: properties-conf\n          subPath: application.properties\n      serviceAccountName: payments\n      volumes:\n      - configMap:\n          name: payments-properties-conf-v1\n        name: properties-conf\n",
              "/apis/apps/v1/deployments/postgres": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: postgres\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: postgres\n      service: postgres\n  template:\n    metadata:\n      annotations:\n        consul.hashicorp.com/connect-inject: \"true\"\n        prometheus.io/port: \"9102\"\n        prometheus.io/scrape: \"true\"\n      labels:\n        app: postgres\n        service: postgres\n    spec:\n      containers:\n      - args:\n        - -c\n        - listen_addresses=127.0.0.1\n        env:\n        - name: POSTGRES_DB\n          value: products\n        - name: POSTGRES_USER\n          value: postgres\n        - name: POSTGRES_PASSWORD\n          value: password\n        image: hashicorpdemoapp/product-api-db:v0.0.19\n        name: postgres\n        ports:\n        - containerPort: 5432\n        volumeMounts:\n        - mountPath: /var/lib/postgresql/data\n          name: pgdata\n      serviceAccountName: postgres\n      volumes:\n      - emptyDir: {}\n        name: pgdata\n",
              "/apis/apps/v1/deployments/product-api": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: product-api\n  name: product-api\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: product-api\n  template:\n    metadata:\n      annotations:\n        consul.hashicorp.com/connect-inject: \"true\"\n        prometheus.io/port: \"9102\"\n        prometheus.io/scrape: \"true\"\n      labels:\n        app: product-api\n    spec:\n      containers:\n      - env:\n        - name: CONFIG_FILE\n          value: /config/conf.json\n        - name: JAEGER_ENDPOINT\n          value: http://otel-collector:9411\n        image: hashicorpdemoapp/product-api:v0.0.19\n        livenessProbe:\n          failureThreshold: 30\n          httpGet:\n            path: /health\n            port: 9090\n          initialDelaySeconds: 15\n          periodSeconds: 10\n          timeoutSeconds: 1\n        name: product-api\n        ports:\n        - containerPort: 9090\n        - containerPort: 9103\n        volumeMounts:\n        - mountPath: /config\n          name: config\n          readOnly: true\n      serviceAccountName: product-api\n      volumes:\n      - configMap:\n          items:\n          - key: config\n            path: conf.json\n          name: db-configmap\n        name: config\n",
              "/apis/apps/v1/deployments/public-api": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: public-api\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: public-api\n      service: public-api\n  template:\n    metadata:\n      annotations:\n        consul.hashicorp.com/connect-inject: \"true\"\n        prometheus.io/port: \"9102\"\n        prometheus.io/scrape: \"true\"\n      labels:\n        app: public-api\n        service: public-api\n    spec:\n      containers:\n      - env:\n        - name: BIND_ADDRESS\n          value: :8080\n        - name: PRODUCT_API_URI\n          value: http://product-api:9090\n        - name: PAYMENT_API_URI\n          value: http://payments:9090\n        - name: JAEGER_ENDPOINT\n          value: http://otel-collector:9411\n        image: hashicorpdemoapp/public-api:v0.0.5\n        name: public-api\n        ports:\n        - containerPort: 8080\n      serviceAccountName: public-api\n",
              "/apis/consul.hashicorp.com/v1alpha1/ingressgateways/ingress-gateway": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: IngressGateway\nmetadata:\n  name: ingress-gateway\nspec:\n  listeners:\n  - port: 8080\n    protocol: http\n    services:\n    - hosts:\n      - '*'\n      name: api-vs\n",
              "/apis/consul.hashicorp.com/v1alpha1/namespaces/default/servicerouters/api-vs": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceRouter\nmetadata:\n  name: api-vs\n  namespace: default\nspec:\n  routes:\n  - destination:\n      namespace: default\n      service: public-api\n    match:\n      http:\n        pathPrefix: /api\n  - destination:\n      namespace: default\n      service: frontend\n    match:\n      http:\n        pathPrefix: /\n",
              "/apis/consul.hashicorp.com/v1alpha1/servicedefaultses/frontend": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: frontend\nspec:\n  protocol: http\n",
              "/apis/consul.hashicorp.com/v1alpha1/servicedefaultses/payments": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: payments\nspec:\n  protocol: http\n",
              "/apis/consul.hashicorp.com/v1alpha1/servicedefaultses/postgres": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: postgres\nspec:\n  protocol: tcp\n",
              "/apis/consul.hashicorp.com/v1alpha1/servicedefaultses/product-api": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: product-api\nspec:\n  protocol: http\n",
              "/apis/consul.hashicorp.com/v1alpha1/servicedefaultses/public-api": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: public-api\nspec:\n  protocol: http\n",
              "/apis/consul.hashicorp.com/v1alpha1/serviceintentionses/frontend": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: frontend\nspec:\n  destination:\n    name: frontend\n  sources:\n  - action: allow\n    name: ingress-gateway\n",
              "/apis/consul.hashicorp.com/v1alpha1/serviceintentionses/payments": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: payments\nspec:\n  destination:\n    name: payments\n  sources:\n  - action: allow\n    name: product-api\n  - action: allow\n    name: public-api\n",
              "/apis/consul.hashicorp.com/v1alpha1/serviceintentionses/postgres": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: postgres\nspec:\n  destination:\n    name: postgres\n  sources:\n  - action: allow\n    name: product-api\n",
              "/apis/consul.hashicorp.com/v1alpha1/serviceintentionses/product-api": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: product-api\nspec:\n  destination:\n    name: product-api\n  sources:\n  - action: allow\n    name: public-api\n",
              "/apis/consul.hashicorp.com/v1alpha1/serviceintentionses/public-api": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: public-api\nspec:\n  destination:\n    name: public-api\n  sources:\n  - action: allow\n    name: ingress-gateway\n  - name: frontend\n    permissions:\n    - action: deny\n      http:\n        pathExact: /health\n    - action: allow\n      http:\n        header:\n        - name: Authorization\n          present: true\n        methods:\n        - GET\n        - PUT\n        - POST\n        - DELETE\n        pathPrefix: /\n    - action: deny\n      http:\n        pathPrefix: /\n"
            },
            "pattern": "./services/*.yaml",
            "sensitive_vars": null,
            "vars": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "kubernetes_service",
      "name": "ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": []
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "applications",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/default/services/frontend",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "8760fa6b9835ba7bc0f23d5f405ad373738545e6d46017b67fa464256cf8f582",
            "live_uid": "06576715-1bde-482e-9768-fd3a5347500d",
            "name": "frontend",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "06576715-1bde-482e-9768-fd3a5347500d",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "---\napiVersion: v1\nkind: Service\nmetadata:\n  name: frontend\n  labels:\n    app: frontend\nspec:\n  type: LoadBalancer\n  ports:\n    - port: 80\n      targetPort: 80\n  selector:\n    app: frontend",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app: frontend\n  name: frontend\nspec:\n  ports:\n  - port: 80\n    targetPort: 80\n  selector:\n    app: frontend\n  type: LoadBalancer\n",
            "yaml_incluster": "8760fa6b9835ba7bc0f23d5f405ad373738545e6d46017b67fa464256cf8f582"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_path_documents.manifests"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/default/serviceaccounts/frontend",
            "ignore_fields": null,
            "kind": "ServiceAccount",
            "live_manifest_incluster": "8d869e2b2ce8f752f35e25be3939e530428c39f6d10538c50efc964e4481c087",
            "live_uid": "a178b3b3-425e-4d1c-b0a0-0417008c095d",
            "name": "frontend",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "a178b3b3-425e-4d1c-b0a0-0417008c095d",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: frontend\nautomountServiceAccountToken: true",
            "yaml_body_parsed": "apiVersion: v1\nautomountServiceAccountToken: true\nkind: ServiceAccount\nmetadata:\n  name: frontend\n",
            "yaml_incluster": "8d869e2b2ce8f752f35e25be3939e530428c39f6d10538c50efc964e4481c087"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_path_documents.manifests"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 1,
          "attributes": {
            "api_version": "consul.hashicorp.com/v1alpha1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/consul.hashicorp.com/v1alpha1/namespaces/default/servicedefaultses/frontend",
            "ignore_fields": null,
            "kind": "ServiceDefaults",
            "live_manifest_incluster": "3fd6c5ed79dcf7914e0b8bde359f21d644f45dbb55f8f4debdfe21a042b62416",
            "live_uid": "31ccfbbb-361c-4659-8ff8-51fd58cea168",
            "name": "frontend",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "31ccfbbb-361c-4659-8ff8-51fd58cea168",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: frontend\nspec:\n  protocol: \"http\"",
            "yaml_body_parsed": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: frontend\nspec:\n  protocol: http\n",
            "yaml_incluster": "3fd6c5ed79dcf7914e0b8bde359f21d644f45dbb55f8f4debdfe21a042b62416"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_path_documents.manifests"
          ]
        },
        {
          "index_key": 3,
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/default/configmaps/nginx-configmap",
            "ignore_fields": null,
            "kind": "ConfigMap",
            "live_manifest_incluster": "3bbed833a6407e4304b124490bc6467208be99f6a96c6921aaabb60cf46d239d",
            "live_uid": "d0086570-847d-4473-82bd-c4794af8c7cb",
            "name": "nginx-configmap",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "d0086570-847d-4473-82bd-c4794af8c7cb",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: nginx-configmap\ndata:\n  config: |\n    # /etc/nginx/conf.d/default.conf\n    server {\n        listen       80;\n        server_name  localhost;\n\n        #charset koi8-r;\n        #access_log  /var/log/nginx/host.access.log  main;\n\n        location / {\n            root   /usr/share/nginx/html;\n            index  index.html index.htm;\n        }\n\n        # Proxy pass the api location to save CORS\n        # Use location exposed by Consul connect\n        location /api {\n            proxy_pass http://public-api:8080;\n            proxy_http_version 1.1;\n            proxy_set_header Upgrade $http_upgrade;\n            proxy_set_header Connection \"Upgrade\";\n            proxy_set_header Host $host;\n        }\n        location /payments {\n            proxy_pass http://payments:8080;\n            proxy_http_version 1.1;\n            proxy_set_header Upgrade $http_upgrade;\n            proxy_set_header Connection \"Upgrade\";\n            proxy_set_header Host $host;\n        }\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   /usr/share/nginx/html;\n        }\n    }",
            "yaml_body_parsed": "apiVersion: v1\ndata:\n  config: |-\n    # /etc/nginx/conf.d/default.conf\n    server {\n        listen       80;\n        server_name  localhost;\n\n        #charset koi8-r;\n        #access_log  /var/log/nginx/host.access.log  main;\n\n        location / {\n            root   /usr/share/nginx/html;\n            index  index.html index.htm;\n        }\n\n        # Proxy pass the api location to save CORS\n        # Use location exposed by Consul connect\n        location /api {\n            proxy_pass http://public-api:8080;\n            proxy_http_version 1.1;\n            proxy_set_header Upgrade $http_upgrade;\n            proxy_set_header Connection \"Upgrade\";\n            proxy_set_header Host $host;\n        }\n        location /payments {\n            proxy_pass http://payments:8080;\n            proxy_http_version 1.1;\n            proxy_set_header Upgrade $http_upgrade;\n            proxy_set_header Connection \"Upgrade\";\n            proxy_set_header Host $host;\n        }\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   /usr/share/nginx/html;\n        }\n    }\nkind: ConfigMap\nmetadata:\n  name: nginx-configmap\n",
            "yaml_incluster": "3bbed833a6407e4304b124490bc6467208be99f6a96c6921aaabb60cf46d239d"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_path_documents.manifests"
          ]
        },
        {
          "index_key": 4,
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/default/deployments/frontend",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "33a9406e91199e4a151edb316d8af79c7ce3d1cae70c23910f820fd6b6e18d1f",
            "live_uid": "6ad02ee2-1fa2-4ad4-a69f-cc24e7ecf0a1",
            "name": "frontend",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "6ad02ee2-1fa2-4ad4-a69f-cc24e7ecf0a1",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: frontend\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      service: frontend\n      app: frontend\n  template:\n    metadata:\n      labels:\n        service: frontend\n        app: frontend\n      annotations:\n        prometheus.io/scrape: \"true\"\n        prometheus.io/port: \"9102\"\n        consul.hashicorp.com/connect-inject: \"true\"\n    spec:\n      serviceAccountName: frontend\n      volumes:\n      - name: config\n        configMap:\n          name: nginx-configmap\n          items:\n          - key: config\n            path: default.conf\n      containers:\n        - name: frontend\n          image: hashicorpdemoapp/frontend:v0.0.7\n          ports:\n            - containerPort: 80\n          env:\n              # consul ingress gateway\n              - name: NEXT_PUBLIC_PUBLIC_API_URL\n                value: http://public-api:8080\n          # volumeMounts:\n          #   - name: config\n          #     mountPath: /etc/nginx/conf.d\n          #     readOnly: true",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: frontend\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: frontend\n      service: frontend\n  template:\n    metadata:\n      annotations:\n        consul.hashicorp.com/connect-inject: \"true\"\n        prometheus.io/port: \"9102\"\n        prometheus.io/scrape: \"true\"\n      labels:\n        app: frontend\n        service: frontend\n    spec:\n      containers:\n      - env:\n        - name: NEXT_PUBLIC_PUBLIC_API_URL\n          value: http://public-api:8080\n        image: hashicorpdemoapp/frontend:v0.0.7\n        name: frontend\n        ports:\n        - containerPort: 80\n      serviceAccountName: frontend\n      volumes:\n      - configMap:\n          items:\n          - key: config\n            path: default.conf\n          name: nginx-configmap\n        name: config\n",
            "yaml_incluster": "33a9406e91199e4a151edb316d8af79c7ce3d1cae70c23910f820fd6b6e18d1f"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_path_documents.manifests"
          ]
        },
        {
          "index_key": 5,
          "schema_version": 1,
          "attributes": {
            "api_version": "consul.hashicorp.com/v1alpha1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/consul.hashicorp.com/v1alpha1/namespaces/default/ingressgateways/ingress-gateway",
            "ignore_fields": null,
            "kind": "IngressGateway",
            "live_manifest_incluster": "b7b2e433266ab86cbde22e38b1dc1af3e4b6aea9bb0c798817a04ad7e3a9243f",
            "live_uid": "6dd36cfd-c324-4ce0-9145-207688039f2f",
            "name": "ingress-gateway",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "6dd36cfd-c324-4ce0-9145-207688039f2f",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "---\napiVersion: consul.hashicorp.com/v1alpha1\nkind: IngressGateway\nmetadata:\n  name: ingress-gateway\nspec:\n  listeners:\n    - port: 8080\n      protocol: http\n      services:\n        - name: api-vs\n          hosts: [\"*\"]",
            "yaml_body_parsed": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: IngressGateway\nmetadata:\n  name: ingress-gateway\nspec:\n  listeners:\n  - port: 8080\n    protocol: http\n    services:\n    - hosts:\n      - '*'\n      name: api-vs\n",
            "yaml_incluster": "b7b2e433266ab86cbde22e38b1dc1af3e4b6aea9bb0c798817a04ad7e3a9243f"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_path_documents.manifests"
          ]
        },
        {
          "index_key": 6,
          "schema_version": 1,
          "attributes": {
            "api_version": "consul.hashicorp.com/v1alpha1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/consul.hashicorp.com/v1alpha1/namespaces/default/serviceintentionses/frontend",
            "ignore_fields": null,
            "kind": "ServiceIntentions",
            "live_manifest_incluster": "16865d9507ccb269712c5c3c76dff289adf5a5835e89c493bb4f6b337933b475",
            "live_uid": "0dc9c349-0dc0-4956-8a9d-99e7d27bdd48",
            "name": "frontend",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "0dc9c349-0dc0-4956-8a9d-99e7d27bdd48",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "---\napiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: frontend\nspec:\n  destination:\n    name: frontend\n  sources:\n  - name: ingress-gateway\n    action: allow",
            "yaml_body_parsed": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: frontend\nspec:\n  destination:\n    name: frontend\n  sources:\n  - action: allow\n    name: ingress-gateway\n",
            "yaml_incluster": "16865d9507ccb269712c5c3c76dff289adf5a5835e89c493bb4f6b337933b475"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_path_documents.manifests"
          ]
        },
        {
          "index_key": 7,
          "schema_version": 1,
          "attributes": {
            "api_version": "consul.hashicorp.com/v1alpha1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/consul.hashicorp.com/v1alpha1/namespaces/default/serviceintentionses/public-api",
            "ignore_fields": null,
            "kind": "ServiceIntentions",
            "live_manifest_incluster": "22317bff4e0c5d30a3b976f3f1c87eec92aa01750e2093c2590624a970cbc5d3",
            "live_uid": "65c916db-a059-4489-b9e8-e81a6b8a7e37",
            "name": "public-api",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "65c916db-a059-4489-b9e8-e81a6b8a7e37",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: public-api\nspec:\n  # Name of the destination service affected by this ServiceIntentions entry\n  destination:\n    name: public-api\n  # The set of traffic sources affected by this ServiceIntentions entry\n  sources:\n  - name: ingress-gateway\n    action: allow\n  # The first affected traffic source-maps to service name of inbound traffic source\n  - name: frontend\n    # The set of permissions to apply when frontend is the traffic source\n    # The first permission to match in the list is terminal and stops further evaluation.\n    permissions:\n    # Add this to always deny traffic from the frontend service to /health route\n    - action: deny\n      http:\n        pathExact: \"/health\"\n    # This permission now defines the conditions that should be allowed\n    # Allow traffic to all paths for the GET, PUT, POST, DELETE verbs as long as an\n    # Authorization header is present\n    - action: allow\n      http:\n        pathPrefix: \"/\"\n        methods:\n        - GET\n        - PUT\n        - POST\n        - DELETE\n        header:\n        - name: \"Authorization\"\n          present: true\n    # Define a deny intention for all other traffic\n    - action: deny\n      http:\n        pathPrefix: \"/\"",
            "yaml_body_parsed": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: public-api\nspec:\n  destination:\n    name: public-api\n  sources:\n  - action: allow\n    name: ingress-gateway\n  - name: frontend\n    permissions:\n    - action: deny\n      http:\n        pathExact: /health\n    - action: allow\n      http:\n        header:\n        - name: Authorization\n          present: true\n        methods:\n        - GET\n        - PUT\n        - POST\n        - DELETE\n        pathPrefix: /\n    - action: deny\n      http:\n        pathPrefix: /\n",
            "yaml_incluster": "22317bff4e0c5d30a3b976f3f1c87eec92aa01750e2093c2590624a970cbc5d3"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_path_documents.manifests"
          ]
        },
        {
          "index_key": 8,
          "schema_version": 1,
          "attributes": {
            "api_version": "consul.hashicorp.com/v1alpha1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/consul.hashicorp.com/v1alpha1/namespaces/default/serviceintentionses/postgres",
            "ignore_fields": null,
            "kind": "ServiceIntentions",
            "live_manifest_incluster": "57d0c06589e408efdbda0f04d1d05faf3c5e41e361445a0f29d350359d1042fa",
            "live_uid": "ed9971ec-0f80-4840-ba9a-f5acae66addd",
            "name": "postgres",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "ed9971ec-0f80-4840-ba9a-f5acae66addd",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: postgres\nspec:\n  destination:\n    name: postgres\n  sources:\n  - name: product-api\n    action: allow",
            "yaml_body_parsed": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: postgres\nspec:\n  destination:\n    name: postgres\n  sources:\n  - action: allow\n    name: product-api\n",
            "yaml_incluster": "57d0c06589e408efdbda0f04d1d05faf3c5e41e361445a0f29d350359d1042fa"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_path_documents.manifests"
          ]
        },
        {
          "index_key": 9,
          "schema_version": 1,
          "attributes": {
            "api_version": "consul.hashicorp.com/v1alpha1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/consul.hashicorp.com/v1alpha1/namespaces/default/serviceintentionses/payments",
            "ignore_fields": null,
            "kind": "ServiceIntentions",
            "live_manifest_incluster": "6cbd369531037283577913ecf8a31ab005e7749ae997cecbdbbf5318c6169d9e",
            "live_uid": "a73403ab-9f99-49c1-80e8-799172cd75c3",
            "name": "payments",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "a73403ab-9f99-49c1-80e8-799172cd75c3",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: payments\nspec:\n  destination:\n    name: payments\n  sources:\n  - name: product-api\n    action: allow\n  - name: public-api\n    action: allow",
            "yaml_body_parsed": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: payments\nspec:\n  destination:\n    name: payments\n  sources:\n  - action: allow\n    name: product-api\n  - action: allow\n    name: public-api\n",
            "yaml_incluster": "6cbd369531037283577913ecf8a31ab005e7749ae997cecbdbbf5318c6169d9e"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_path_documents.manifests"
          ]
        },
        {
          "index_key": 10,
          "schema_version": 1,
          "attributes": {
            "api_version": "consul.hashicorp.com/v1alpha1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/consul.hashicorp.com/v1alpha1/namespaces/default/serviceintentionses/product-api",
            "ignore_fields": null,
            "kind": "ServiceIntentions",
            "live_manifest_incluster": "d357d58e735916176a5699cfd07d4941fd1bbc5ecaadb7c515dd0df7d76377ba",
            "live_uid": "cfafadcc-c464-4298-b6c8-aad184124189",
            "name": "product-api",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "cfafadcc-c464-4298-b6c8-aad184124189",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: product-api\nspec:\n  destination:\n    name: product-api\n  sources:\n  - name: public-api\n    action: allow",
            "yaml_body_parsed": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceIntentions\nmetadata:\n  name: product-api\nspec:\n  destination:\n    name: product-api\n  sources:\n  - action: allow\n    name: public-api\n",
            "yaml_incluster": "d357d58e735916176a5699cfd07d4941fd1bbc5ecaadb7c515dd0df7d76377ba"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_path_documents.manifests"
          ]
        },
        {
          "index_key": 11,
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/default/services/payments",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "26042fbe5373efab569bd8dac07e5ef60f0642409fecf46ff69b34ce60138f22",
            "live_uid": "dce79b14-833e-41a0-868d-e1a14930cabd",
            "name": "payments",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "dce79b14-833e-41a0-868d-e1a14930cabd",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "---\napiVersion: v1\nkind: Service\nmetadata:\n  name: payments\nspec:\n  selector:\n    app: payments\n  ports:\n    - name: http\n      protocol: TCP\n      port: 8080\n      targetPort: 8080",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  name: payments\nspec:\n  ports:\n  - name: http\n    port: 8080\n    protocol: TCP\n    targetPort: 8080\n  selector:\n    app: payments\n",
            "yaml_incluster": "26042fbe5373efab569bd8dac07e5ef60f0642409fecf46ff69b34ce60138f22"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_path_documents.manifests"
          ]
        },
        {
          "index_key": 12,
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/default/serviceaccounts/payments",
            "ignore_fields": null,
            "kind": "ServiceAccount",
            "live_manifest_incluster": "5c4d9cdbae19885bdc1eddc9cf2b2f2ab4ab399baab340069f10f692be9ebdf1",
            "live_uid": "7a4097f0-bde6-4f8b-a6cc-27010481f9fc",
            "name": "payments",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "7a4097f0-bde6-4f8b-a6cc-27010481f9fc",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: payments\nautomountServiceAccountToken: true",
            "yaml_body_parsed": "apiVersion: v1\nautomountServiceAccountToken: true\nkind: ServiceAccount\nmetadata:\n  name: payments\n",
            "yaml_incluster": "5c4d9cdbae19885bdc1eddc9cf2b2f2ab4ab399baab340069f10f692be9ebdf1"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_path_documents.manifests"
          ]
        },
        {
          "index_key": 13,
          "schema_version": 1,
          "attributes": {
            "api_version": "consul.hashicorp.com/v1alpha1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/consul.hashicorp.com/v1alpha1/namespaces/default/servicedefaultses/payments",
            "ignore_fields": null,
            "kind": "ServiceDefaults",
            "live_manifest_incluster": "ac1a4c03dea69b808ae3e696c2d6c5cdc02bad1f2755e6a889640f1b17814854",
            "live_uid": "4d8e6399-d786-49c2-a7fe-54f5862e34d3",
            "name": "payments",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "4d8e6399-d786-49c2-a7fe-54f5862e34d3",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: payments\nspec:\n  protocol: \"http\"",
            "yaml_body_parsed": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: payments\nspec:\n  protocol: http\n",
            "yaml_incluster": "ac1a4c03dea69b808ae3e696c2d6c5cdc02bad1f2755e6a889640f1b17814854"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_path_documents.manifests"
          ]
        },
        {
          "index_key": 14,
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/default/configmaps/payments-properties-conf-v1",
            "ignore_fields": null,
            "kind": "ConfigMap",
            "live_manifest_incluster": "42b75b0fadeef87b44f0ab24c09cf68963b54844b049dc908a53286a823ee7b3",
            "live_uid": "36142802-f68f-44e5-9ab3-85fd4ff33b5c",
            "name": "payments-properties-conf-v1",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "36142802-f68f-44e5-9ab3-85fd4ff33b5c",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: payments-properties-conf-v1\ndata:\n  application.properties: |\n    opentracing.jaeger.http-sender.url=http://otel-collector:9411\n    opentracing.jaeger.include-jaeger-env-tags=true\n    logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG\n    opentracing.jaeger.enable-b3-propagation=true\n    spring.profiles.active=chaos-monkey\n    spring.main.allow-bean-definition-overriding=true\n    chaos.monkey.enabled=false\n    chaos.monkey.watcher.actuatorHealth=true\n    chaos.monkey.assaults.exceptionsActive=true\n    chaos.monkey.assaults.level=1",
            "yaml_body_parsed": "apiVersion: v1\ndata:\n  application.properties: |-\n    opentracing.jaeger.http-sender.url=http://otel-collector:9411\n    opentracing.jaeger.include-jaeger-env-tags=true\n    logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG\n    opentracing.jaeger.enable-b3-propagation=true\n    spring.profiles.active=chaos-monkey\n    spring.main.allow-bean-definition-overriding=true\n    chaos.monkey.enabled=false\n    chaos.monkey.watcher.actuatorHealth=true\n    chaos.monkey.assaults.exceptionsActive=true\n    chaos.monkey.assaults.level=1\nkind: ConfigMap\nmetadata:\n  name: payments-properties-conf-v1\n",
            "yaml_incluster": "42b75b0fadeef87b44f0ab24c09cf68963b54844b049dc908a53286a823ee7b3"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_path_documents.manifests"
          ]
        },
        {
          "index_key": 15,
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/default/deployments/payments",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "368d8ed3ddd40af1324e5570d049f9e8da69c375392b40bacd36930c7ddf9afe",
            "live_uid": "1cc1a393-6337-4ba7-8124-912b0213280d",
            "name": "payments",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "1cc1a393-6337-4ba7-8124-912b0213280d",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: payments\n  labels:\n    app: payments\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: payments\n  template:\n    metadata:\n      labels:\n        app: payments\n      annotations:\n        consul.hashicorp.com/connect-inject: \"true\"\n    spec:\n      serviceAccountName: payments\n      volumes:\n        - name: properties-conf\n          configMap:\n            name: payments-properties-conf-v1\n      containers:\n        - name: payments\n          image: hashicorpdemoapp/payments:v0.0.16\n          volumeMounts:\n            - name: properties-conf\n              mountPath: /config/application.properties\n              subPath: application.properties\n          ports:\n            - containerPort: 8080",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: payments\n  name: payments\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: payments\n  template:\n    metadata:\n      annotations:\n        consul.hashicorp.com/connect-inject: \"true\"\n      labels:\n        app: payments\n    spec:\n      containers:\n      - image: hashicorpdemoapp/payments:v0.0.16\n        name: payments\n        ports:\n        - containerPort: 8080\n        volumeMounts:\n        - mountPath: /config/application.properties\n          name: properties-conf\n          subPath: application.properties\n      serviceAccountName: payments\n      volumes:\n      - configMap:\n          name: payments-properties-conf-v1\n        name: properties-conf\n",
            "yaml_incluster": "368d8ed3ddd40af1324e5570d049f9e8da69c375392b40bacd36930c7ddf9afe"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_path_documents.manifests"
          ]
        },
        {
          "index_key": 16,
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/default/services/postgres",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "1778803abecb41c88233d2573e505492bc7dd3f21334baa3f703ebc438f54c92",
            "live_uid": "2b231999-c451-48ee-ba16-ad0a32542740",
            "name": "postgres",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "2b231999-c451-48ee-ba16-ad0a32542740",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "---\napiVersion: v1\nkind: Service\nmetadata:\n  name: postgres\n  labels:\n    app: postgres\nspec:\n  type: ClusterIP\n  ports:\n    - port: 5432\n      targetPort: 5432\n  selector:\n    app: postgres",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app: postgres\n  name: postgres\nspec:\n  ports:\n  - port: 5432\n    targetPort: 5432\n  selector:\n    app: postgres\n  type: ClusterIP\n",
            "yaml_incluster": "1778803abecb41c88233d2573e505492bc7dd3f21334baa3f703ebc438f54c92"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_path_documents.manifests"
          ]
        },
        {
          "index_key": 17,
          "schema_version": 1,
          "attributes": {
            "api_version": "consul.hashicorp.com/v1alpha1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/consul.hashicorp.com/v1alpha1/namespaces/default/servicedefaultses/postgres",
            "ignore_fields": null,
            "kind": "ServiceDefaults",
            "live_manifest_incluster": "63722b6ab70b1b0a046207ee6260e3cf3ddc08e01622f3d5b54ba7d5bf5d4fc3",
            "live_uid": "1c93fd73-01ef-49d0-9574-dc12968ea229",
            "name": "postgres",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "1c93fd73-01ef-49d0-9574-dc12968ea229",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: postgres\nspec:\n  protocol: 'tcp'",
            "yaml_body_parsed": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: postgres\nspec:\n  protocol: tcp\n",
            "yaml_incluster": "63722b6ab70b1b0a046207ee6260e3cf3ddc08e01622f3d5b54ba7d5bf5d4fc3"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_path_documents.manifests"
          ]
        },
        {
          "index_key": 18,
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/default/serviceaccounts/postgres",
            "ignore_fields": null,
            "kind": "ServiceAccount",
            "live_manifest_incluster": "b224d87496ccd4f010d76954e2848a982ec7a57820daee102c880d10006b3082",
            "live_uid": "91e6e554-6bbc-4357-aa0e-36ae9527503a",
            "name": "postgres",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "91e6e554-6bbc-4357-aa0e-36ae9527503a",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: postgres\nautomountServiceAccountToken: true",
            "yaml_body_parsed": "apiVersion: v1\nautomountServiceAccountToken: true\nkind: ServiceAccount\nmetadata:\n  name: postgres\n",
            "yaml_incluster": "b224d87496ccd4f010d76954e2848a982ec7a57820daee102c880d10006b3082"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_path_documents.manifests"
          ]
        },
        {
          "index_key": 19,
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/default/deployments/postgres",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "39fd7610dc277637a8d2c197632249e6e43a4940f9666c32edf5c276162a9efa",
            "live_uid": "6f07d8ce-185a-417e-928f-837967e2622f",
            "name": "postgres",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "6f07d8ce-185a-417e-928f-837967e2622f",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: postgres\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      service: postgres\n      app: postgres\n  template:\n    metadata:\n      labels:\n        service: postgres\n        app: postgres\n      annotations:\n        prometheus.io/scrape: \"true\"\n        prometheus.io/port: \"9102\"\n        consul.hashicorp.com/connect-inject: \"true\"\n    spec:\n      serviceAccountName: postgres\n      containers:\n        - name: postgres\n          image: hashicorpdemoapp/product-api-db:v0.0.19\n          ports:\n            - containerPort: 5432\n          env:\n            - name: POSTGRES_DB\n              value: products\n            - name: POSTGRES_USER\n              value: postgres\n            - name: POSTGRES_PASSWORD\n              value: password\n          # only listen on loopback so only access is via connect proxy\n          args: [\"-c\", \"listen_addresses=127.0.0.1\"]\n          volumeMounts:\n            - mountPath: \"/var/lib/postgresql/data\"\n              name: \"pgdata\"\n      volumes:\n        - name: pgdata\n          emptyDir: {}",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: postgres\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: postgres\n      service: postgres\n  template:\n    metadata:\n      annotations:\n        consul.hashicorp.com/connect-inject: \"true\"\n        prometheus.io/port: \"9102\"\n        prometheus.io/scrape: \"true\"\n      labels:\n        app: postgres\n        service: postgres\n    spec:\n      containers:\n      - args:\n        - -c\n        - listen_addresses=127.0.0.1\n        env:\n        - name: POSTGRES_DB\n          value: products\n        - name: POSTGRES_USER\n          value: postgres\n        - name: POSTGRES_PASSWORD\n          value: password\n        image: hashicorpdemoapp/product-api-db:v0.0.19\n        name: postgres\n        ports:\n        - containerPort: 5432\n        volumeMounts:\n        - mountPath: /var/lib/postgresql/data\n          name: pgdata\n      serviceAccountName: postgres\n      volumes:\n      - emptyDir: {}\n        name: pgdata\n",
            "yaml_incluster": "39fd7610dc277637a8d2c197632249e6e43a4940f9666c32edf5c276162a9efa"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_path_documents.manifests"
          ]
        },
        {
          "index_key": 20,
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/default/services/product-api",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "ece9e2d551024bd3366559d6394a88e27486a867482fd17ef5b5d50075debff4",
            "live_uid": "9b88f636-c339-4ee5-941d-0a474846641d",
            "name": "product-api",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "9b88f636-c339-4ee5-941d-0a474846641d",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "---\napiVersion: v1\nkind: Service\nmetadata:\n  name: product-api\nspec:\n  selector:\n    app: product-api\n  ports:\n    - name: http\n      protocol: TCP\n      port: 9090\n      targetPort: 9090",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  name: product-api\nspec:\n  ports:\n  - name: http\n    port: 9090\n    protocol: TCP\n    targetPort: 9090\n  selector:\n    app: product-api\n",
            "yaml_incluster": "ece9e2d551024bd3366559d6394a88e27486a867482fd17ef5b5d50075debff4"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_path_documents.manifests"
          ]
        },
        {
          "index_key": 21,
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/default/serviceaccounts/product-api",
            "ignore_fields": null,
            "kind": "ServiceAccount",
            "live_manifest_incluster": "c50abaf7384b528874ebb652445693fe1a2857923462c4ec45cd1de1c3b17eee",
            "live_uid": "d36454f0-b24e-4a1e-8e5d-80fcac3fe5ae",
            "name": "product-api",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "d36454f0-b24e-4a1e-8e5d-80fcac3fe5ae",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: product-api\nautomountServiceAccountToken: true",
            "yaml_body_parsed": "apiVersion: v1\nautomountServiceAccountToken: true\nkind: ServiceAccount\nmetadata:\n  name: product-api\n",
            "yaml_incluster": "c50abaf7384b528874ebb652445693fe1a2857923462c4ec45cd1de1c3b17eee"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_path_documents.manifests"
          ]
        },
        {
          "index_key": 22,
          "schema_version": 1,
          "attributes": {
            "api_version": "consul.hashicorp.com/v1alpha1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/consul.hashicorp.com/v1alpha1/namespaces/default/servicedefaultses/product-api",
            "ignore_fields": null,
            "kind": "ServiceDefaults",
            "live_manifest_incluster": "015feb5f3c23b58f03bb68a49515ba475af55a519a345e41053f5090f25440d3",
            "live_uid": "d35c1905-e12b-4d9d-ad5a-ec4f7b737a04",
            "name": "product-api",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "d35c1905-e12b-4d9d-ad5a-ec4f7b737a04",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: product-api\nspec:\n  protocol: \"http\"",
            "yaml_body_parsed": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: product-api\nspec:\n  protocol: http\n",
            "yaml_incluster": "015feb5f3c23b58f03bb68a49515ba475af55a519a345e41053f5090f25440d3"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_path_documents.manifests"
          ]
        },
        {
          "index_key": 23,
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/default/configmaps/db-configmap",
            "ignore_fields": null,
            "kind": "ConfigMap",
            "live_manifest_incluster": "64e311924131e10ab0fce8c1e4551029e8e8568a120d83cc90b8143277dafb1f",
            "live_uid": "8cde4b46-95be-45b2-bf12-0a06ad8cb41f",
            "name": "db-configmap",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "8cde4b46-95be-45b2-bf12-0a06ad8cb41f",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: db-configmap\ndata:\n  config: |\n    {\n      \"db_connection\": \"host=postgres port=5432 user=postgres password=password dbname=products sslmode=disable\",\n      \"bind_address\": \":9090\",\n      \"metrics_address\": \":9103\"\n    }",
            "yaml_body_parsed": "apiVersion: v1\ndata:\n  config: |-\n    {\n      \"db_connection\": \"host=postgres port=5432 user=postgres password=password dbname=products sslmode=disable\",\n      \"bind_address\": \":9090\",\n      \"metrics_address\": \":9103\"\n    }\nkind: ConfigMap\nmetadata:\n  name: db-configmap\n",
            "yaml_incluster": "64e311924131e10ab0fce8c1e4551029e8e8568a120d83cc90b8143277dafb1f"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_path_documents.manifests"
          ]
        },
        {
          "index_key": 24,
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/default/deployments/product-api",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "3aac0a09c3a622791aa44cf23c12931f403e45c4a2fd29b5ebde72a6e89cc202",
            "live_uid": "54f5559e-de55-4365-bcac-6c7d3bb57e95",
            "name": "product-api",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "54f5559e-de55-4365-bcac-6c7d3bb57e95",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: product-api\n  labels:\n    app: product-api\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: product-api\n  template:\n    metadata:\n      labels:\n        app: product-api\n      annotations:\n        prometheus.io/scrape: \"true\"\n        prometheus.io/port: \"9102\"\n        consul.hashicorp.com/connect-inject: \"true\"\n    spec:\n      serviceAccountName: product-api\n      volumes:\n      - name: config\n        configMap:\n          name: db-configmap\n          items:\n          - key: config\n            path: conf.json\n      containers:\n        - name: product-api\n          image: hashicorpdemoapp/product-api:v0.0.19\n          ports:\n            - containerPort: 9090\n            - containerPort: 9103\n          env:\n            - name: \"CONFIG_FILE\"\n              value: \"/config/conf.json\"\n            - name : JAEGER_ENDPOINT\n              value: http://otel-collector:9411\n          livenessProbe:\n            httpGet:\n              path: /health\n              port: 9090\n            initialDelaySeconds: 15\n            timeoutSeconds: 1\n            periodSeconds: 10\n            failureThreshold: 30\n          volumeMounts:\n            - name: config\n              mountPath: /config\n              readOnly: true",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: product-api\n  name: product-api\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: product-api\n  template:\n    metadata:\n      annotations:\n        consul.hashicorp.com/connect-inject: \"true\"\n        prometheus.io/port: \"9102\"\n        prometheus.io/scrape: \"true\"\n      labels:\n        app: product-api\n    spec:\n      containers:\n      - env:\n        - name: CONFIG_FILE\n          value: /config/conf.json\n        - name: JAEGER_ENDPOINT\n          value: http://otel-collector:9411\n        image: hashicorpdemoapp/product-api:v0.0.19\n        livenessProbe:\n          failureThreshold: 30\n          httpGet:\n            path: /health\n            port: 9090\n          initialDelaySeconds: 15\n          periodSeconds: 10\n          timeoutSeconds: 1\n        name: product-api\n        ports:\n        - containerPort: 9090\n        - containerPort: 9103\n        volumeMounts:\n        - mountPath: /config\n          name: config\n          readOnly: true\n      serviceAccountName: product-api\n      volumes:\n      - configMap:\n          items:\n          - key: config\n            path: conf.json\n          name: db-configmap\n        name: config\n",
            "yaml_incluster": "3aac0a09c3a622791aa44cf23c12931f403e45c4a2fd29b5ebde72a6e89cc202"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_path_documents.manifests"
          ]
        },
        {
          "index_key": 25,
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/default/services/public-api",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "dcb3959f0de649254f976f8494e89951d43c16cabc415ed6cedc44ffe1734f41",
            "live_uid": "35ec71b1-b5dc-4dc8-9b61-dc363c1813a1",
            "name": "public-api",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "35ec71b1-b5dc-4dc8-9b61-dc363c1813a1",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "---\napiVersion: v1\nkind: Service\nmetadata:\n  name: public-api\n  labels:\n    app: public-api\nspec:\n  type: ClusterIP\n  ports:\n    - port: 8080\n      targetPort: 8080\n  selector:\n    app: public-api",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    app: public-api\n  name: public-api\nspec:\n  ports:\n  - port: 8080\n    targetPort: 8080\n  selector:\n    app: public-api\n  type: ClusterIP\n",
            "yaml_incluster": "dcb3959f0de649254f976f8494e89951d43c16cabc415ed6cedc44ffe1734f41"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_path_documents.manifests"
          ]
        },
        {
          "index_key": 26,
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/default/serviceaccounts/public-api",
            "ignore_fields": null,
            "kind": "ServiceAccount",
            "live_manifest_incluster": "b6991cc1c8b2aa84f1b4889ab3b94e138a15d9a98d8ac0820851e91b68735ce1",
            "live_uid": "2e62a122-354f-4e71-882a-f07e444248b7",
            "name": "public-api",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "2e62a122-354f-4e71-882a-f07e444248b7",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: public-api\nautomountServiceAccountToken: true",
            "yaml_body_parsed": "apiVersion: v1\nautomountServiceAccountToken: true\nkind: ServiceAccount\nmetadata:\n  name: public-api\n",
            "yaml_incluster": "b6991cc1c8b2aa84f1b4889ab3b94e138a15d9a98d8ac0820851e91b68735ce1"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_path_documents.manifests"
          ]
        },
        {
          "index_key": 27,
          "schema_version": 1,
          "attributes": {
            "api_version": "consul.hashicorp.com/v1alpha1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/consul.hashicorp.com/v1alpha1/namespaces/default/servicedefaultses/public-api",
            "ignore_fields": null,
            "kind": "ServiceDefaults",
            "live_manifest_incluster": "5f754bbf9046b0afdac7b454982a4e47a03829bdb34a0e61b2dae6a0ec822685",
            "live_uid": "92abf573-cdf0-45e7-a77b-a5698efd56f7",
            "name": "public-api",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "92abf573-cdf0-45e7-a77b-a5698efd56f7",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: public-api\nspec:\n  protocol: \"http\"",
            "yaml_body_parsed": "apiVersion: consul.hashicorp.com/v1alpha1\nkind: ServiceDefaults\nmetadata:\n  name: public-api\nspec:\n  protocol: http\n",
            "yaml_incluster": "5f754bbf9046b0afdac7b454982a4e47a03829bdb34a0e61b2dae6a0ec822685"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_path_documents.manifests"
          ]
        },
        {
          "index_key": 28,
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/default/deployments/public-api",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "e46b6b976955180f001a47dce2ef6a97bcc01fda29e83bfd6bc4a09b1c5d6092",
            "live_uid": "fb4bd5b3-d13d-42e6-b8dd-906ae230d87e",
            "name": "public-api",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "fb4bd5b3-d13d-42e6-b8dd-906ae230d87e",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: public-api\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      service: public-api\n      app: public-api\n  template:\n    metadata:\n      labels:\n        service: public-api\n        app: public-api\n      annotations:\n        prometheus.io/scrape: \"true\"\n        prometheus.io/port: \"9102\"\n        consul.hashicorp.com/connect-inject: \"true\"\n    spec:\n      serviceAccountName: public-api\n      containers:\n        - name: public-api\n          image: hashicorpdemoapp/public-api:v0.0.5\n          ports:\n            - containerPort: 8080\n          env:\n            - name: BIND_ADDRESS\n              value: \":8080\"\n            - name: PRODUCT_API_URI\n              value: \"http://product-api:9090\"\n            - name: PAYMENT_API_URI\n              value: \"http://payments:9090\"\n            - name : JAEGER_ENDPOINT\n              value: http://otel-collector:9411",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: public-api\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: public-api\n      service: public-api\n  template:\n    metadata:\n      annotations:\n        consul.hashicorp.com/connect-inject: \"true\"\n        prometheus.io/port: \"9102\"\n        prometheus.io/scrape: \"true\"\n      labels:\n        app: public-api\n        service: public-api\n    spec:\n      containers:\n      - env:\n        - name: BIND_ADDRESS\n          value: :8080\n        - name: PRODUCT_API_URI\n          value: http://product-api:9090\n        - name: PAYMENT_API_URI\n          value: http://payments:9090\n        - name: JAEGER_ENDPOINT\n          value: http://otel-collector:9411\n        image: hashicorpdemoapp/public-api:v0.0.5\n        name: public-api\n        ports:\n        - containerPort: 8080\n      serviceAccountName: public-api\n",
            "yaml_incluster": "e46b6b976955180f001a47dce2ef6a97bcc01fda29e83bfd6bc4a09b1c5d6092"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_path_documents.manifests"
          ]
        },
        {
          "index_key": 30,
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/default/configmaps/products-load-generator",
            "ignore_fields": null,
            "kind": "ConfigMap",
            "live_manifest_incluster": "ea8580f4f93be1d10aca513b1efc73f6dff3a0505132e3b2615fa12c9ec56ebc",
            "live_uid": "30bd454e-df32-4713-a831-fb892beae3f0",
            "name": "products-load-generator",
            "namespace": "default",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "30bd454e-df32-4713-a831-fb892beae3f0",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: products-load-generator\n  namespace: default\ndata:\n  load_test.js: |\n    import http from 'k6/http';\n    import { sleep } from 'k6';\n\n    export const options = {\n      vus: 50,\n      duration: '30m',\n    };\n\n    export default function () {\n    sleep(Math.random() * 2);\n      var query = `\n      query {\n        coffees {\n          id\n          name\n          price\n        }\n      }`;\n      var url = 'http://consul-ingress-gateway.consul:8080/api';\n      var payload = JSON.stringify({\n        query: query\n      });\n      var params = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n\n      http.post(url, payload, params);\n    }",
            "yaml_body_parsed": "apiVersion: v1\ndata:\n  load_test.js: |-\n    import http from 'k6/http';\n    import { sleep } from 'k6';\n\n    export const options = {\n      vus: 50,\n      duration: '30m',\n    };\n\n    export default function () {\n    sleep(Math.random() * 2);\n      var query = `\n      query {\n        coffees {\n          id\n          name\n          price\n        }\n      }`;\n      var url = 'http://consul-ingress-gateway.consul:8080/api';\n      var payload = JSON.stringify({\n        query: query\n      });\n      var params = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n\n      http.post(url, payload, params);\n    }\nkind: ConfigMap\nmetadata:\n  name: products-load-generator\n  namespace: default\n",
            "yaml_incluster": "ea8580f4f93be1d10aca513b1efc73f6dff3a0505132e3b2615fa12c9ec56ebc"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_path_documents.manifests"
          ]
        },
        {
          "index_key": 31,
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/default/configmaps/payments-load-generator",
            "ignore_fields": null,
            "kind": "ConfigMap",
            "live_manifest_incluster": "e0f3b7f717076eb78d0adcdf6e56dff05897daa5d6c8f0da86011652b5479fdc",
            "live_uid": "a9b795b4-a31b-405c-9c65-b8075023df37",
            "name": "payments-load-generator",
            "namespace": "default",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "a9b795b4-a31b-405c-9c65-b8075023df37",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: payments-load-generator\n  namespace: default\ndata:\n  load_test.js: |\n    import http from 'k6/http';\n    import { sleep } from 'k6';\n\n    export const options = {\n      vus: 25,\n      duration: '30m',\n    };\n\n    export default function () {\n    sleep(Math.random() * 2);\n      var query = `\n      mutation {\n        pay(\n          details: {\n            name: \"John\"\n            type: \"mastercard\"\n            number: \"1111-2222-3333-4444\"\n            expiry: \"01/22\"\n            cv2: 555\n            amount: 8\n          }\n        ){\n          id,\n          card_plaintext,\n          card_ciphertext,\n          message\n        }\n      }`;\n      var url = 'http://consul-ingress-gateway.consul:8080/api';\n      var payload = JSON.stringify({\n        query: query\n      });\n      var params = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n\n      http.post(url, payload, params);\n    }",
            "yaml_body_parsed": "apiVersion: v1\ndata:\n  load_test.js: |-\n    import http from 'k6/http';\n    import { sleep } from 'k6';\n\n    export const options = {\n      vus: 25,\n      duration: '30m',\n    };\n\n    export default function () {\n    sleep(Math.random() * 2);\n      var query = `\n      mutation {\n        pay(\n          details: {\n            name: \"John\"\n            type: \"mastercard\"\n            number: \"1111-2222-3333-4444\"\n            expiry: \"01/22\"\n            cv2: 555\n            amount: 8\n          }\n        ){\n          id,\n          card_plaintext,\n          card_ciphertext,\n          message\n        }\n      }`;\n      var url = 'http://consul-ingress-gateway.consul:8080/api';\n      var payload = JSON.stringify({\n        query: query\n      });\n      var params = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n\n      http.post(url, payload, params);\n    }\nkind: ConfigMap\nmetadata:\n  name: payments-load-generator\n  namespace: default\n",
            "yaml_incluster": "e0f3b7f717076eb78d0adcdf6e56dff05897daa5d6c8f0da86011652b5479fdc"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_path_documents.manifests"
          ]
        },
        {
          "index_key": 32,
          "status": "tainted",
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/default/deployments/load-generator-deployment",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "3457bab73d86e1afcdb0c22876977b052200c85e61f80918af6ad658752db603",
            "live_uid": "759c91a9-7e06-4ecb-980d-d120839d6373",
            "name": "load-generator-deployment",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "759c91a9-7e06-4ecb-980d-d120839d6373",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: load-generator-deployment\n  labels:\n    app: load-generator-deployment\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: load-generator\n  template:\n    metadata:\n      labels:\n        app: load-generator\n    spec:\n      volumes:\n      - name: products-config-volume\n        configMap:\n          name: products-load-generator\n      - name: payments-config-volume\n        configMap:\n          name: payments-load-generator\n      containers:\n      - name: products-load-generator\n        image: loadimpact/k6\n        command: [\"k6\", \"run\", \"/etc/config/load_test.js\"]\n        volumeMounts:\n        - name: products-config-volume\n          mountPath: /etc/config\n      - name: payments-load-generator\n        image: loadimpact/k6\n        command: [\"k6\", \"run\", \"/etc/config/load_test.js\"]\n        volumeMounts:\n        - name: payments-config-volume\n          mountPath: /etc/config",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: load-generator-deployment\n  name: load-generator-deployment\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: load-generator\n  template:\n    metadata:\n      labels:\n        app: load-generator\n    spec:\n      containers:\n      - command:\n        - k6\n        - run\n        - /etc/config/load_test.js\n        image: loadimpact/k6\n        name: products-load-generator\n        volumeMounts:\n        - mountPath: /etc/config\n          name: products-config-volume\n      - command:\n        - k6\n        - run\n        - /etc/config/load_test.js\n        image: loadimpact/k6\n        name: payments-load-generator\n        volumeMounts:\n        - mountPath: /etc/config\n          name: payments-config-volume\n      volumes:\n      - configMap:\n          name: products-load-generator\n        name: products-config-volume\n      - configMap:\n          name: payments-load-generator\n        name: payments-config-volume\n",
            "yaml_incluster": "3457bab73d86e1afcdb0c22876977b052200c85e61f80918af6ad658752db603"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_path_documents.manifests"
          ]
        }
      ]
    }
  ]
}
