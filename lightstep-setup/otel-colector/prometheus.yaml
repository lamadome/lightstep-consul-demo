apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "3"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"deployment.kubernetes.io/revision":"2","meta.helm.sh/release-name":"consul","meta.helm.sh/release-namespace":"default"},"creationTimestamp":"2022-05-09T20:42:05Z","generation":2,"labels":{"app":"prometheus","app.kubernetes.io/managed-by":"Helm","chart":"prometheus-13.2.1","component":"server","heritage":"Helm","release":"prometheus"},"name":"prometheus-server","namespace":"default","resourceVersion":"154022","uid":"91a816b7-4597-46da-a5d3-d48d8da33649"},"spec":{"progressDeadlineSeconds":600,"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"app":"prometheus","component":"server","release":"prometheus"}},"strategy":{"rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"},"type":"RollingUpdate"},"template":{"metadata":{"annotations":{"consul.hashicorp.com/connect-inject":"false"},"creationTimestamp":null,"labels":{"app":"prometheus","chart":"prometheus-13.2.1","component":"server","heritage":"Helm","release":"prometheus"}},"spec":{"containers":[{"args":["--prometheus.wal=/data/wal","--destination.endpoint=https://ingest.lightstep.com:443","--destination.header=lightstep-access-token=\"ODQPa1dWXiUZrDU+3LXmDRh3aVU8xHvmjnSQV6w7nd1mc2VsJ73rCsk03KImWDbm2zOBab9icDRu2GtOWWj3s+1UQ/KhtU8ic0DlD0lf\""],"image":"lightstep/opentelemetry-prometheus-sidecar","imagePullPolicy":"Always","name":"otel-sidecar","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","volumeMounts":[{"mountPath":"/data","name":"storage-volume"}]},{"args":["--volume-dir=/etc/config","--webhook-url=http://127.0.0.1:9090/-/reload"],"image":"jimmidyson/configmap-reload:v0.4.0","imagePullPolicy":"IfNotPresent","name":"prometheus-server-configmap-reload","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","volumeMounts":[{"mountPath":"/etc/config","name":"config-volume","readOnly":true}]},{"args":["--storage.tsdb.retention.time=15d","--config.file=/etc/config/prometheus.yml","--storage.tsdb.path=/data","--web.console.libraries=/etc/prometheus/console_libraries","--web.console.templates=/etc/prometheus/consoles","--web.enable-lifecycle"],"image":"quay.io/prometheus/prometheus:v2.24.0","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/-/healthy","port":9090,"scheme":"HTTP"},"initialDelaySeconds":30,"periodSeconds":15,"successThreshold":1,"timeoutSeconds":10},"name":"prometheus-server","ports":[{"containerPort":9090,"protocol":"TCP"}],"readinessProbe":{"failureThreshold":3,"httpGet":{"path":"/-/ready","port":9090,"scheme":"HTTP"},"periodSeconds":5,"successThreshold":1,"timeoutSeconds":4},"resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","volumeMounts":[{"mountPath":"/etc/config","name":"config-volume"},{"mountPath":"/data","name":"storage-volume"}]}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{"fsGroup":65534,"runAsGroup":65534,"runAsNonRoot":true,"runAsUser":65534},"serviceAccount":"prometheus-server","serviceAccountName":"prometheus-server","terminationGracePeriodSeconds":300,"volumes":[{"configMap":{"defaultMode":420,"name":"prometheus-server"},"name":"config-volume"},{"emptyDir":{},"name":"storage-volume"}]}}},"status":{"conditions":[{"lastTransitionTime":"2022-05-09T20:42:05Z","lastUpdateTime":"2022-05-09T23:23:20Z","message":"ReplicaSet \"prometheus-server-7bc57d5cd5\" has successfully progressed.","reason":"NewReplicaSetAvailable","status":"True","type":"Progressing"},{"lastTransitionTime":"2022-05-09T23:24:16Z","lastUpdateTime":"2022-05-09T23:24:16Z","message":"Deployment does not have minimum availability.","reason":"MinimumReplicasUnavailable","status":"False","type":"Available"}],"observedGeneration":2,"replicas":1,"unavailableReplicas":1,"updatedReplicas":1}}
    meta.helm.sh/release-name: consul
    meta.helm.sh/release-namespace: default
  creationTimestamp: "2022-05-09T20:42:05Z"
  generation: 3
  labels:
    app: prometheus
    app.kubernetes.io/managed-by: Helm
    chart: prometheus-13.2.1
    component: server
    heritage: Helm
    release: prometheus
  name: prometheus-server
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: prometheus
      component: server
      release: prometheus
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        consul.hashicorp.com/connect-inject: "false"
      creationTimestamp: null
      labels:
        app: prometheus
        chart: prometheus-13.2.1
        component: server
        heritage: Helm
        release: prometheus
    spec:
      containers:
      - args:
        - --prometheus.wal=/data/wal
        - --destination.endpoint=https://ingest.lightstep.com:443
        - --destination.header=lightstep-access-token="${LIGHTSTEP_ACCESS_TOKEN}"
        image: lightstep/opentelemetry-prometheus-sidecar
        imagePullPolicy: Always
        name: otel-sidecar
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /data
          name: storage-volume
      - args:
        - --volume-dir=/etc/config
        - --webhook-url=http://127.0.0.1:9090/-/reload
        image: jimmidyson/configmap-reload:v0.4.0
        imagePullPolicy: IfNotPresent
        name: prometheus-server-configmap-reload
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
          readOnly: true
      - args:
        - --storage.tsdb.retention.time=15d
        - --config.file=/etc/config/prometheus.yml
        - --storage.tsdb.path=/data
        - --web.console.libraries=/etc/prometheus/console_libraries
        - --web.console.templates=/etc/prometheus/consoles
        - --web.enable-lifecycle
        image: quay.io/prometheus/prometheus:v2.24.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /-/healthy
            port: 9090
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 10
        name: prometheus-server
        ports:
        - containerPort: 9090
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /-/ready
            port: 9090
            scheme: HTTP
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 4
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
        - mountPath: /data
          name: storage-volume
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 65534
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccount: prometheus-server
      serviceAccountName: prometheus-server
      terminationGracePeriodSeconds: 300
      volumes:
      - configMap:
          defaultMode: 420
          name: prometheus-server
        name: config-volume
      - emptyDir: {}
        name: storage-volume
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2022-05-09T23:25:15Z"
    lastUpdateTime: "2022-05-09T23:25:15Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2022-05-09T20:42:05Z"
    lastUpdateTime: "2022-05-09T23:25:15Z"
    message: ReplicaSet "prometheus-server-56775fccb" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 3
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
